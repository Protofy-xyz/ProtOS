{
    "name": "MetaSearch",
    "displayName": "Meta Search",
    "icon": "folder-search",
    "hidden": true,
    "cards": [
        {
            "key": "action_1751638749452",
            "width": 2,
            "height": 6,
            "icon": "file-stack",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "queue",
            "displayResponse": true,
            "rulesCode": "if(params.action == 'reset') {\r\n    return []\r\n} else if(params.action == 'pop') {\r\n    return (Array.isArray(board?.['queue']) ? board?.['queue'] : []).slice(1)\r\n} else {\r\n    return (Array.isArray(board?.['queue']) ? board?.['queue'] : []).concat([params.item])\r\n}",
            "value": [],
            "params": {
                "item": "",
                "action": "action to perform in the queue: push, pop, clear"
            },
            "configParams": {
                "item": {
                    "visible": true,
                    "defaultValue": ""
                },
                "action": {
                    "visible": true,
                    "defaultValue": ""
                }
            },
            "displayButton": false
        },
        {
            "key": "action_1751639120194",
            "width": 2,
            "height": 6,
            "icon": "x",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "reindex",
            "displayResponse": false,
            "rulesCode": "const items = await execute_action(\"/api/core/v1/files\", {path: '/data/public/store'})\r\nconsole.log('iteeeeeeeems: ', items)\r\nfor(var i = 0;i<items.length;i++) {\r\n    await execute_action(\"queue\", {\r\n\t\titem: items[i], // \r\n\t\taction: 'push', // action to perform in the queue: push, pop, clear\r\n\t})\r\n}\r\n",
            "value": {
                "error": "No code found for action"
            },
            "triggers": [
                {
                    "type": "manual",
                    "caption": "reindex"
                }
            ]
        },
        {
            "key": "action_1751639237192",
            "width": 2,
            "height": 6,
            "icon": "file-plus",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "push",
            "displayResponse": true,
            "rulesCode": "execute_action(\"queue\", {\r\n\titem: params.item, // \r\n\taction: 'push', // action to perform in the queue: push, pop, clear\r\n})",
            "params": {
                "item": ""
            },
            "configParams": {
                "item": {
                    "visible": true,
                    "defaultValue": ""
                }
            },
            "triggers": [
                {
                    "type": "manual",
                    "caption": "push"
                }
            ]
        },
        {
            "key": "action_1751639992343",
            "width": 2,
            "height": 6,
            "icon": "zap",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${data.value != 'empty' ? boardImage({ src: `${'/public/store/'+data.value}` }):''}\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "current_item",
            "displayResponse": true,
            "rulesCode": "const item = board?.['queue']?.[0] ?? 'empty'\r\nawait execute_action(\"queue\", {\r\n\titem: '', // \r\n\taction: 'pop', // action to perform in the queue: push, pop, clear\r\n})\r\nreturn item",
            "value": "protofy.jpg",
            "displayButton": true,
            "triggers": [
                {
                    "type": "manual",
                    "caption": "pop"
                }
            ]
        },
        {
            "key": "action_1751640229148",
            "width": 2,
            "height": 6,
            "icon": "cog",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "system_state",
            "displayResponse": true,
            "rulesCode": "return params.state",
            "params": {
                "state": ""
            },
            "configParams": {
                "state": {
                    "visible": false,
                    "defaultValue": ""
                }
            },
            "displayButton": false,
            "value": "idle"
        },
        {
            "key": "action_1751640277348",
            "width": 2,
            "height": 6,
            "icon": "clock-1",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "idle",
            "displayResponse": false,
            "rulesCode": "execute_action(\"system_state\", {\r\n\tstate: 'idle', // \r\n})",
            "triggers": [
                {
                    "type": "manual",
                    "caption": "Idle"
                }
            ]
        },
        {
            "key": "action_1751640277348_vento_copy_da6q2neatwgsv0mi6xxb7f",
            "width": 2,
            "height": 6,
            "icon": "x",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "error",
            "displayResponse": false,
            "rulesCode": "execute_action(\"system_state\", {\r\n\tstate: 'error', // \r\n})",
            "triggers": [
                {
                    "type": "manual",
                    "caption": "Idle"
                }
            ],
            "color": "#d43737"
        },
        {
            "key": "action_1751640277348_vento_copy_3vychcftr59a612rdh2ujt",
            "width": 2,
            "height": 6,
            "icon": "brain",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "thinking",
            "displayResponse": false,
            "rulesCode": "execute_action(\"system_state\", {\r\n\tstate: 'thinking', // \r\n})",
            "triggers": [
                {
                    "type": "manual",
                    "caption": "Thinking"
                }
            ],
            "color": "#407ece"
        },
        {
            "key": "value_1751640795802",
            "width": 2,
            "height": 6,
            "icon": "folder-search",
            "html": "return fileBrowser(data)",
            "name": "File Browser",
            "description": "Render a file browser",
            "type": "value",
            "editorOptions": {
                "defaultTab": "value"
            },
            "rulesCode": "return \"/data/public/store\""
        },
        {
            "key": "action_1751641244774",
            "width": 2,
            "height": 6,
            "icon": "zap",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "reset",
            "displayResponse": false,
            "rulesCode": "execute_action(\"queue\", {\r\n\titem: '', // \r\n\taction: 'reset', // action to perform in the queue: push, pop, clear\r\n})",
            "triggers": [
                {
                    "type": "manual",
                    "caption": "reset"
                }
            ]
        },
        {
            "key": "action_1751641826768",
            "width": 2,
            "height": 6,
            "icon": "air-vent",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        <textarea style=\"width:100%;height:100%\">${data.value}</textarea>\n        ${cardAction({ data })}\n    `\n});\n",
            "type": "action",
            "name": "process",
            "displayResponse": false,
            "rulesCode": "await execute_action(\"thinking\")\r\nconst item = 'http://localhost:8000/public/store/'+board?.['current_item']\r\nlet result = await execute_action(\"/api/core/v1/vision/describe\", {\r\n    url: item,\r\n    prompt: board?.['prompt']\r\n})\r\nconst content = result.replace(/^```json\\s*([\\s\\S]*?)\\s*```$/m, '$1')\r\nawait execute_action(\"/api/v1/actions/metasearch/create\", {\r\n    ...(JSON.parse(content)),\r\n    path: '/data/public/store/'+board?.['current_item']\r\n})\r\nawait execute_action(\"idle\")\r\nreturn content",
            "value": "{\n    \"one_sentence_description\": \"A woman wearing safety glasses and a mask is using an angle grinder in a workshop.\",\n    \"main_colors\": \"gray, white, black\",\n    \"visible_elements\": [\"woman\", \"angle grinder\", \"workshop\", \"workbench\", \"tools\", \"shelves\", \"safety glasses\", \"mask\", \"laptop\", \"metal parts\", \"grinding wheel\", \"power tools\"],\n    \"addresses\": [],\n    \"people_names\": [],\n    \"type\": \"picture\"\n}"
        },
        {
            "key": "action_1751642306167",
            "width": 2,
            "height": 6,
            "icon": "brain",
            "html": "\n// data contains: data.icon, data.color, data.name, data.params\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}\n        Click in card settings to setup prompt\n    `\n});\n",
            "type": "value",
            "name": "prompt",
            "displayResponse": true,
            "rulesCode": "return `\r\nTe he pasado una imagen, y de ella quiero sacar una serie de informacion.\r\nEstas conectado a un sistema automatico y se espera que generes una respuesta en json.\r\nTu respuesta debe ser rellenar este json y nada mas:\r\n\r\nRellena la siguiente plantilla en base a la imagen, y elimina los valores de ejemplo por unos reales.\r\nSi algun valor no aplica, dejalo vacio.\r\n\r\n{\r\n    \"one_sentence_description\": \"\",\r\n    \"main_colors\": \"\",\r\n    \"visible_elements\": [\"car\", \"tree\", \"document\", ...],\r\n    \"addresses\": [\"...\", ...]\r\n    \"people_names\": [\"...\", ...],\r\n    \"type\": \"picture\" | \"document\" | \"drawing\" | \"invoice\"\r\n}\r\n`"
        },
        {
            "key": "value_1751644640071",
            "width": 2,
            "height": 6,
            "icon": "boxes",
            "html": "\n//data contains: data.value, data.icon and data.color\nreturn card({\n    content: `\n        ${icon({ name: data.icon, color: data.color, size: '48' })}    \n        ${cardValue({ value: data.value })}\n    `\n});\n",
            "type": "value",
            "name": "Total metasearch",
            "description": "Total metasearch",
            "rulesCode": "return states.objects?.metasearch.total;"
        }
    ],
    "autopilot": false,
    "layouts": {
        "lg": [
            {
                "w": 2,
                "h": 19,
                "x": 2,
                "y": 0,
                "i": "action_1751638749452",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 5,
                "x": 0,
                "y": 19,
                "i": "action_1751639120194",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 7,
                "x": 0,
                "y": 12,
                "i": "action_1751639237192",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 8,
                "x": 0,
                "y": 0,
                "i": "action_1751639992343",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 5,
                "x": 4,
                "y": 0,
                "i": "action_1751640229148",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 1,
                "h": 5,
                "x": 6,
                "y": 0,
                "i": "action_1751640277348",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 1,
                "h": 5,
                "x": 8,
                "y": 0,
                "i": "action_1751640277348_vento_copy_da6q2neatwgsv0mi6xxb7f",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 1,
                "h": 5,
                "x": 7,
                "y": 0,
                "i": "action_1751640277348_vento_copy_3vychcftr59a612rdh2ujt",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 3,
                "h": 19,
                "x": 4,
                "y": 5,
                "i": "value_1751640795802",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 4,
                "x": 0,
                "y": 8,
                "i": "action_1751641244774",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 4,
                "h": 19,
                "x": 7,
                "y": 5,
                "i": "action_1751641826768",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 5,
                "x": 9,
                "y": 0,
                "i": "action_1751642306167",
                "moved": false,
                "static": false,
                "isResizable": true
            },
            {
                "w": 2,
                "h": 5,
                "x": 2,
                "y": 19,
                "i": "value_1751644640071",
                "moved": false,
                "static": false,
                "isResizable": true
            }
        ],
        "md": [
            {
                "i": "action_1751638749452",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751639120194",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751639237192",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751639992343",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751640229148",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751640277348",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751640277348_vento_copy_da6q2neatwgsv0mi6xxb7f",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751640277348_vento_copy_3vychcftr59a612rdh2ujt",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "value_1751640795802",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751641244774",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751641826768",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "action_1751642306167",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            },
            {
                "i": "value_1751644640071",
                "x": 0,
                "y": 0,
                "w": 2,
                "h": 6,
                "isResizable": true
            }
        ],
        "sm": []
    }
}